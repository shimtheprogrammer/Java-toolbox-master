
public class nearest {

	public static int k=8;
	public static int trainingSet[][]=new int[][]{{4,3},{1,3},{3,3},{3,7},{7,4},{4,1},{6,5},{5,6},{3,7},{6,2},
		{4,6},{4,4},{5,8},{7,8},{5,6},{10,5},{7,6},{4,10},{9,7},{5,4},{8,5},{6,6},{7,4},{8,8}};
	public static int querySet[][]=new int[][]{{6,5}};
	public static int distance[]=new int[24];
	

	public static void main(String []args){
		int i, d1, d2, d;
		
		for(i=0; i<24; i++){
			d1=((trainingSet[i][0])-(querySet[0][0]))*((trainingSet[i][0])-(querySet[0][0]));
			d2=((trainingSet[i][1])-(querySet[0][1]))*((trainingSet[i][1])-(querySet[0][1]));
			
			d=d1+d2;
			distance[i]=d;
			System.out.print(distance[i]);
			System.out.printf("\n");
		}
		
		/****************SORT***************/
		
		 int count=0;
		 int swap;
		 int index[]=new int[24];
		  do{
		  for(int j=1; j<24; j++){
			  count=0;
				if(distance[j]<=distance[j-1]){
					index[count]=j;
					swap=distance[j];
					distance[i]=distance[j-1];
					distance[i-1]=swap;
					count++;//to indicate that swap has happened
				}
				else{
				index[count]=j-1;
				count++;
				}
				
		  }
		  for(i=0; i<24; i++){
			  System.out.print(index[i]);
		  }
		  }while(count>0);
		  
	}
	}
	
	}